{"remainingRequest":"G:\\guoBlog\\vuepress-devkit\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!G:\\guoBlog\\vuepress-devkit\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!G:\\guoBlog\\vuepress-devkit\\docs\\guide.md?vue&type=template&id=169672e7&","dependencies":[{"path":"G:\\guoBlog\\vuepress-devkit\\docs\\guide.md","mtime":1668668527357},{"path":"G:\\guoBlog\\vuepress-devkit\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\guoBlog\\vuepress-devkit\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\guoBlog\\vuepress-devkit\\node_modules\\babel-loader\\lib\\index.js","mtime":1526583314000},{"path":"G:\\guoBlog\\vuepress-devkit\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"G:\\guoBlog\\vuepress-devkit\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\guoBlog\\vuepress-devkit\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\guoBlog\\vuepress-devkit\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"不知道写什么-先空着吧\"><a class=\"header-anchor\" href=\"#不知道写什么-先空着吧\">#</a> 不知道写什么,先空着吧</h1>\n<p>🎉 💯 🎍 💝 🔥</p>\n<!-- ::: tip 提示\n有阅读障碍的同学，可以跳过第一至四节，下载我写好的[工具包](https://github.com/zhangyunchencc/vuepress-devkit.git): \n`git clone https://github.com/zhangyunchencc/vuepress-devkit.git` 然后从第五节开始看。\n:::\n\n## 一、为什么你需要一个博客？\n优秀的程序员都在写博客，写博客有很多好处：\n- 帮助自己梳理、总结、理解知识点（个人提升）\n- 帮助别人理解知识点（好人一生平安）\n- 简历更好看，更多面试机会（升职加薪）\n\n## 二、什么是 VuePress，为什么要使用 VuePress ？\n**VuePress** 是尤雨溪（vue.js 框架作者）4月12日发布的一个全新的基于 vue 的静态网站生成器，实际上就是一个 vue 的 spa 应用，内置 webpack，可以用来写文档。详见 [VuePress中文网](https://vuepress.docschina.org/)\n\n其实类似的建站工具有很多，比如 WordPress、Jekyll、Hexo 等，其中 WordPress 需要自己购买虚拟主机，不考虑；Jekyll 是 Github-Page 默认支持的，听说操作比较复杂，没有用过不做过多评价了；Hexo 之前一直在用，但一直觉得主题不好看，风格不够简洁优雅。自从遇见 VuePress，嗯，就是它了~ \n\nVuePress 有很多优点：\n- 界面简洁优雅（个人感觉比 HEXO 好看）\n- 容易上手（半小时能搭好整个项目）\n- 更好的兼容、扩展 Markdown 语法\n- 响应式布局，PC端、手机端\n- Google Analytics 集成\n- 支持 PWA\n\n## 三、开始搭建\n\n### 创建项目文件夹\n可以右键手动新建，也可以使用 mkdir 命令新建：\n\n    mkdir vuepressBlogDemo\n\n### 全局安装 VuePress\n\n    npm install -g vuepress\n\n### 进入 vuepressBlogDemo 文件夹，初始化项目\n使用 `npm init` 或 `npm init -y`（默认yes）\n\n    npm init -y\n\n### 创建文件夹和文件\n在 vuepressBlogDemo 文件夹中创建 docs 文件夹，在 docs 中创建 .vuepress 文件夹，在.vuepress中创建 public 文件夹和 config.js 文件，最终项目结构如下所示：\n\n    vuepressBlogDemo\n    ├─── docs\n    │   ├── README.md\n    │   └── .vuepress\n    │       ├── public\n    │       └── config.js\n    └── package.json\n\n### 在 config.js 文件中配置网站标题、描述、主题等信息\n\n```js\nmodule.exports = {\n  title: 'Chen\\'s blog',\n  description: '我的个人网站',\n  head: [ // 注入到当前页面的 HTML <head> 中的标签\n    ['link', { rel: 'icon', href: '/logo.jpg' }], // 增加一个自定义的 favicon(网页标签的图标)\n  ],\n  base: '/', // 这是部署到github相关的配置\n  markdown: {\n    lineNumbers: false // 代码块显示行号\n  },\n  themeConfig: {\n    nav:[ // 导航栏配置\n      {text: '前端基础', link: '/accumulate/' },\n      {text: '算法题库', link: '/algorithm/'},\n      {text: '微博', link: 'https://baidu.com'}      \n    ],\n    sidebar: 'auto', // 侧边栏配置\n    sidebarDepth: 2, // 侧边栏显示2级\n  }\n};\n```\n\n### 在 package.json 文件里添加两个启动命令\n```json\n\"scripts\": {\n  \"dev\": \"vuepress dev docs\",\n  \"build\": \"vuepress build docs\"\n}\n```\n\n### 一切就绪 :tada: 跑起来看看吧\n\n    npm run dev\n\n## 四、一些小亮点\n完成了基础搭建后，就可以在docs目录下新建 `.md` 文件写文章了（.md 是 Markdown 语法文件，你需要知道 Markdown 的一些基本写法，很简单，这里给大家一份 [Markdown 语法整理大集合](https://www.jianshu.com/p/b03a8d7b1719)）\n\n下面给大家安利一些实用的方法。\n\n### 代码块高亮\n在 .md 文件中书写代码时，可在 \\`\\`\\` 后增加 js、html、json等格式类型，代码块即可按照指定类型高亮\n\n代码：\n\n<pre class=\"language-text\"><code>``` js\nexport default {\n  data () {\n    return {\n      msg: 'Highlighted!'\n    }\n  }\n}\n```</code></pre>\n\n效果：\n``` js\nexport default {\n  data () {\n    return {\n      msg: 'Highlighted!'\n    }\n  }\n}\n```\n\n### 自定义容器\n\n代码：\n\n    ::: tip 提示\n    this is a tip\n    :::\n\n    ::: warning 注意\n    this is a tip\n    :::\n\n    ::: danger 警告\n    this is a tip\n    :::\n\n效果：\n::: tip 提示\nthis is a tip\n:::\n\n::: warning 注意\nthis is a tip\n:::\n\n::: danger 警告\nthis is a tip\n:::\n\n### 支持 Emoji\n代码：\n\n    :tada: :100: :bamboo: :gift_heart: :fire:\n\n效果：\n:tada: :100: :bamboo: :gift_heart: :fire:\n\n:point_right: 这里有一份 [Emoji 大全](https://www.webpagefx.com/tools/emoji-cheat-sheet/) \n\n### 支持 PWA\nVuePress 默认支持 [PWA](https://segmentfault.com/a/1190000012353473)，配置方法如下：\n\nconfig.js 文件中增加\n\n```js\nhead: [ // 注入到当前页面的 HTML <head> 中的标签\n  ['link', { rel: 'manifest', href: '/photo.jpg' }],\n  ['link', { rel: 'apple-touch-icon', href: '/photo.jpg' }],\n],\nserviceWorker: true // 是否开启 PWA\n```\n\npublic 文件夹下新建 manifest.json 文件，添加\n\n```json\n{\n  \"name\": \"张三\",\n  \"short_name\": \"张三\",\n  \"start_url\": \"index.html\",\n  \"display\": \"standalone\",\n  \"background_color\": \"#2196f3\",\n  \"description\": \"张三的个人主页\",\n  \"theme_color\": \"blue\",\n  \"icons\": [\n    {\n      \"src\": \"./photo.jpg\",\n      \"sizes\": \"144x144\",\n      \"type\": \"image/png\"\n    }\n  ],\n  \"related_applications\": [\n    {\n      \"platform\": \"web\"\n    },\n    {\n      \"platform\": \"play\",\n      \"url\": \"https://play.google.com/store/apps/details?id=cheeaun.hackerweb\"\n    }\n  ]\n}\n```\n\n最后在 iPhone 的 safrai 浏览器中打开本网站，点击 `+添加到主屏幕` 就能在桌面看到一个像原生 App 一样的图标（感觉自己写了一个 App 有木有 :smile:）\n\n## 五、部署上线\n说了这么多都是在本地进行的，现在我们要把本地的内容推送到某个服务器上，这样只要有网络，就可以随时随地看自己的网站了。\n\n一般来说，有两种方案可供选择：\n1. 自己买一个服务器，阿里云、腾讯云等，这种方式的好处是速度有保证、可以被搜索引擎收录，坏处是要花钱啊 :moneybag: 土豪同学可以考虑。\n2. 使用 [Github Pages](https://pages.github.com/) 。什么是 Github Pages 呢？简单说就是 Github 提供的、用于搭建个人网站的静态站点托管服务。很多人用它搭建个人博客。这种方式的好处是免费、方便，坏处是速度可能会有些慢、不能被国内的搜索引擎收录。\n\n最终我选择了方案2，下面将给大家讲解如何使用 Github Pages 服务。\n\n### 登陆 [Github](https://github.com/) \n打开 github 网站，登陆自己的 github 账号（没有账号的快去注册并面壁思过作为一个优秀的程序员为啥连一个github账号都没有）\n\n接着我们新建两个仓库：\n\n### 新建仓库一： USERNAME.github.io （不用克隆到本地）\n\n<b>！！！注意：USERNAME 必须是你 Github 的账号名称，不是你的名字拼音，也不是你的非主流网名，不要瞎起，要保证和Github账号名一模一样！</b>\n\n例如我的 Github 账号名称是 zhangyunchencc\n\n![](/images/eg13.png)\n\n那么新建仓库，Repository name 就填写为：zhangyunchencc.github.io\n\n![](/images/eg14.png)\n\n<b>这个仓库建好后，不用克隆到本地，内容更新修改都在仓库二中进行。</b>\n\n### 新建仓库二：随便起一个名字，比如：vuepressBlog （克隆到本地）\n\n这个项目是用来开发博客的，以后只需要改这个项目就够了。\n\n- 使用工具包的，将 [vuepress-devkit](https://github.com/zhangyunchencc/vuepress-devkit.git) 中的内容拷贝到 vuepressBlog 文件夹中\n\n- 自己从头搭建的，将 vuepressBlogDemo 文件夹的内容拷贝到仓库二，并在根目录下创建 deploy.sh 文件，内容如下：\n\n```sh\n#!/usr/bin/env sh\n\n# 确保脚本抛出遇到的错误\nset -e\n\n# 生成静态文件\nnpm run build\n\n# 进入生成的文件夹\ncd docs/.vuepress/dist\n\n# 如果是发布到自定义域名\n# echo 'www.yourwebsite.com' > CNAME\n\ngit init\ngit add -A\ngit commit -m 'deploy'\n\n# 如果你想要部署到 https://USERNAME.github.io\ngit push -f git@github.com:USERNAME/USERNAME.github.io.git master\n\n# 如果发布到 https://USERNAME.github.io/<REPO>  REPO=github上的项目\n# git push -f git@github.com:USERNAME/<REPO>.git master:gh-pages\n\ncd -\n```\n\n### 修改仓库二中的 deploy.sh 发布脚本\n\n把文件中的 USERNAME 改成 Github 账号名，例如我的账号名是 zhangyunchencc，那么就可以改为：\n\n```sh\n# 如果你想要部署到 https://USERNAME.github.io\ngit push -f git@github.com:zhangyunchencc/zhangyunchencc.github.io.git master\n```\n\n这样仓库二和仓库一就建立了关联。\n\n简单说二者的关系是：仓库一负责显示网站内容，我们不需要改动它；日常开发和新增内容，都在仓库二中，并通过 npm run deploy 命令，将代码发布到仓库一。\n\n\n### 在 package.json 文件夹中添加发布命令（使用工具包的请忽略）\n\n``` json\n\"scripts\": {\n  \"deploy\": \"bash deploy.sh\"\n}\n```\n\n### :clap: 大功告成，运行发布命令\n\n    npm run deploy\n\n此时打开 Github Settings 中下面的链接: [https://zhangyunchencc.github.io/](https://zhangyunchencc.github.io/) 即可看到自己的主页啦~\n\n![](/images/eg2.png)\n\n#### PC 端页面是这样的：\n![](/images/eg3.png)\n\n#### 手机端页面是这样的：\n![](/images/eg4.png=200x)\n<img src=\"/images/eg4.png\" style=\"width: 50%; display: block; margin: 0 auto;\">\n\n可以看到导航栏变成了左上角的小图标，可以打开和收起。\n\n## 六、发布到自己的个人域名\n如果你不满足于 https://zhangyunchencc.github.io/ 这样的域名，想要一个自己个人的专属域名，比如 http://www.zhangyunchen.cc/ ，毕竟一些大牛（阮一峰 [http://www.ruanyifeng.com/blog/](http://www.ruanyifeng.com/blog/)） 都是自己名字的网址哦，很方便很酷呢 😎 \n\n下面跟着步骤一步步来就好啦~\n\n### 购买域名\n推荐在 [新网](http://www.xinnet.com/domain/domain.html) 或 [万网](https://wanwang.aliyun.com/) 购买。\n\n我是在新网购买的，下面以新网为例，万网是类似的。\n\n购买完成后进入管理后台，点击 ”解析“ 按钮，添加下面两条内容：\n![](/images/eg5.png)\n\n![](/images/eg6.png)\n\n::: warning 注意！这里有坑：\n在 万网 购买域名的同学请注意，第二条记录中的 * 请用 @ 代替，万网不支持 *\n:::\n\n记录值里的 IP 可以通过 ping Github 的域名得到：\n\n    ping www.username.github.io\n\n### 修改仓库二中的 deploy.sh 文件\n\n将仓库二中的 deploy.sh 文件的第 13 行反注释掉，并填上自己的域名，deploy.sh 文件的最终版：\n\n```sh\n#!/usr/bin/env sh\n\n# 确保脚本抛出遇到的错误\nset -e\n\n# 生成静态文件\nnpm run build\n\n# 进入生成的文件夹\ncd docs/.vuepress/dist\n\n# 如果是发布到自定义域名\necho 'www.zhangyunchen.cc' > CNAME\n\ngit init\ngit add -A\ngit commit -m 'deploy'\n\n# 如果你想要部署到 https://<USERNAME>.github.io\ngit push -f git@github.com:zhangyunchencc/zhangyunchencc.github.io.git master\n\n# 如果发布到 https://<USERNAME>.github.io/<REPO>  REPO=github上的项目\n# git push -f git@github.com:<USERNAME>/vuepress.git master:gh-pages\n\ncd -\n\n```\n\n此时，我们运行 npm run deploy 即可发布到自己的专属域名啦~\n\n### :clap: 大功告成，打开 [https://www.zhangyunchen.cc](https://www.zhangyunchen.cc) 看一下吧~~~\n\n拥有自己专属域名的个人博客感觉很酷哦~\n\n写一些文章，记录一点生活，把自己的网站发给同学朋友看看吧！ :sunglasses:\n\n## 七、最后\n- 你需要一些 [Markdown](https://www.jianshu.com/p/b03a8d7b1719) 语法的基础知识；\n- 你需要一个 [Github](https://github.com/) 账号，并在里面创建两个 repo；\n- Github 需要添加 ssh key，第一次使用的同学遇到问题可以百度解决；\n- 个人博客不只可以用来写技术相关的内容，也可以有自己写的文章、随笔，甚至上传一些照片。\n\n我的 [vuepress-devkit](https://github.com/zhangyunchencc/vuepress-devkit.git) 已经开源放在了 Github 上，还有很多想要增加的功能，例如添加评论模块、自动生成侧边栏目录、增加网站分析工具等等，在这里欢迎大家 Star 或者 Fork 。\n\n以上， -->\n<p>郭若宇 | Front End Engineer | 2022.11.17</p>\n</div>\n",null]}